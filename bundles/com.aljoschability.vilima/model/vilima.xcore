@GenModel(nonNLSMarkers="true",
	complianceLevel="7.0", bundleManifest="false")
@Ecore(nsURI='http://www.aljoschability.com/vilima/2014')
package com.aljoschability.vilima

/* This represents a Matroska file and contains all information after the actual file has been read. */
class MkFile
{
	/* The path of the file. */
	String[1] path
	/* The file name. */
	String[1] name
	/* The size of the file in bytes. */
	Long[1] size
	/* The date/time of the last file modification. */
	Long[1] dateModified
	/* The segment information of the Matroska container. */
	contains MkInformation[1] information
	/* The tracks contained in the Matroska container. */
	contains MkTrack[] tracks
	/* The attachment inside the Matroska container. */
	contains MkAttachment[] attachments
	/* The editions contained in the Matroska container. */
	contains MkEdition[] editions
	/* The tags contained in the Matroska container. */
	contains MkTag[] tags
}

/**
 * This contains all the information about the segment of a matroska file.
 */
class MkInformation
{
	double duration ="-1"
	long date ="-1"
	String uid
	String previousUid
	String nextUid
	String title
	String muxingApp
	String writingApp
}

/* === TRACKS ======================== */
class MkTrack
{
	int[1] number = "0"
	long[1] uid = "0"
	MkTrackType[1] ^type = "UNKNOWN"
	boolean[1] flagEnabled = "true"
	boolean[1] flagDefault = "true"
	boolean[1] flagForced = "false"
	boolean[1] flagLacing = "true"
	String name
	String language = "eng"
	String[1] codecId
	String codecPrivate
	String codecName
	boolean videoFlagInterlaced = "false"
	int videoPixelWidth
	int videoPixelHeight
	int videoPixelCropBottom = "0"
	int videoPixelCropTop = "0"
	int videoPixelCropLeft = "0"
	int videoPixelCropRight = "0"
	int videoDisplayWidth
	int videoDisplayHeight
	int videoDisplayUnit = "0"
	int videoAspectRatioType = "0"
	double audioSamplingFrequency = "8000.0"
	double audioOutputSamplingFrequency
	int audioChannels = "1"
}

enum MkTrackType
{
	UNKNOWN
	VIDEO
	AUDIO
	COMPLEX
	LOGO
	SUBTITLE
	CONTROL
}

/* === ATTACHMENTS =================== */
class MkAttachment
{
	long[1] uid = "0"
	long[1] size
	String[1] name
	String[1] mimeType
	String[1] description
}

/* === CHAPTERS ====================== */
class MkEdition
{
	long[1] uid = "0"
	boolean[1] flagHidden = "false"
	boolean[1] flagDefault = "false"
	contains MkChapter[] chapters
}

class MkChapter
{
	long[1] uid = "0"
	long[1] start = "-1"
	boolean[1] flagHidden = "false"
	boolean[1] flagEnabled = "true"
	contains MkChapterText[] texts
}

class MkChapterText
{
	String[1] text
	String[] languages
}

/* === TAGS ========================== */
class MkTag
{
	int target = "50"
	String targetText
	contains MkTagNode[] nodes
}

class MkTagNode
{
	String[1] name
	String value
	String[1] language = "und"
	boolean[1] languageDefault = "true"
	contains MkTagNode[] nodes
}

/* === LIBRARY ======================== */
/* An identifier that which is used for example to connect a movie to the appropriate TVDB entry. */
class VilimaIdentifier {
	/* The unique name of the identifier */
	id String[1] ^name
	/* The value of the identifier */
	String[1] value
}

class VilimaLibrary
{
	contains VilimaMovie[] movies
	contains VilimaMovieCollection[] movieCollections
	contains VilimaShow[] shows
}

class VilimaMovieCollection
{
	String[1] title
	String[1] summary
	refers VilimaMovie[] movies opposite collection
}

class VilimaShow
{
}

//RECORDING_LOCATION
//PRODUCTION_STUDIO
//GENRE
//CONTENT_TYPE
//SUMMARY
//KEYWORDS
//DATE_RELEASED
class VilimaMovie
{
	String[1] title
	String tagline
	refers VilimaMovieCollection collection opposite movies
}

class ScrapeMovie
{
	contains VilimaIdentifier[] identifiers
	String[1] title
	String tagline
	String summary
	Integer runtime
	Integer voteCount
	Double votePercentage
	String releaseDate
	String posterUrl
}

/* === FUCK2 ========================== */
class XVilimaLibrary
{
	contains XVilimaContentType[] contentTypes
	contains XVilimaGenre[] genres
	contains MkFile[] files
}

class XVilimaContentType
{
	String[1] name
	refers MkFile[] files
}

class XVilimaGenre
{
	String[1] name
	refers MkFile[] files
}